{"version":3,"sources":["../src/Handle.js"],"names":["Handle","nextProps","props","index","handleRadius","handleColor","hover","down","background","handleStroke","xval","yval","onMouseEnter","onMouseLeave","onMouseDown","x","y","sx","sy","cx","cy","a","Math","atan2","cxs","cos","cys","sin"],"mappings":"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","file":"Handle.js","sourcesContent":["import React from \"react\";\nimport BezierComponent from \"./BezierComponent\";\n\nexport default class Handle extends BezierComponent {\n\n  shouldComponentUpdate(nextProps) {\n    if (super.shouldComponentUpdate(nextProps)) return true;\n    const {\n      index,\n      handleRadius,\n      handleColor,\n      hover,\n      down,\n      background,\n      handleStroke,\n      xval,\n      yval,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseDown\n    } = this.props;\n    return nextProps.index !== index ||\n    nextProps.handleRadius !== handleRadius ||\n    nextProps.handleColor !== handleColor ||\n    nextProps.hover !== hover ||\n    nextProps.down !== down ||\n    nextProps.background !== background ||\n    nextProps.handleStroke !== handleStroke ||\n    nextProps.xval !== xval ||\n    nextProps.yval !== yval ||\n    nextProps.onMouseDown !== onMouseDown ||\n    nextProps.onMouseLeave !== onMouseLeave ||\n    nextProps.onMouseEnter !== onMouseEnter;\n  }\n\n  render() {\n    const { x, y } = this;\n    const {\n      index,\n      handleRadius,\n      handleColor,\n      hover,\n      down,\n      background,\n      handleStroke,\n      xval,\n      yval,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseDown\n    } = this.props;\n\n    const sx = x(index);\n    const sy = y(index);\n    const cx = x(xval);\n    const cy = y(yval);\n    const a = Math.atan2(cy-sy, cx-sx);\n    const cxs = cx - handleRadius * Math.cos(a);\n    const cys = cy - handleRadius * Math.sin(a);\n\n    return <g>\n      <line\n        stroke={handleColor}\n        strokeWidth={hover||down ? 1 + handleStroke : handleStroke}\n        x1={cxs}\n        y1={cys}\n        x2={sx}\n        y2={sy} />\n      <circle\n        cx={cx}\n        cy={cy}\n        r={handleRadius}\n        stroke={handleColor}\n        strokeWidth={hover||down ? 2 * handleStroke : handleStroke}\n        fill={down ? background: handleColor}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        onMouseDown={onMouseDown}\n        onTouchStart={onMouseDown} />\n    </g>;\n  }\n}\n"]}